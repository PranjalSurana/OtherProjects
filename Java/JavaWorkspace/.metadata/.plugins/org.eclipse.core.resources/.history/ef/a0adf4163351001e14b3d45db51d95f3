package com.fidelity.ship;

import static org.junit.jupiter.api.Assertions.*;

import java.math.BigDecimal;
import java.time.LocalDate;

import org.junit.jupiter.api.AfterEach;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;

class OfficerTest {

	Officer officer;
	
	@BeforeEach
	void setUp() throws Exception {
	}

	@AfterEach
	void tearDown() throws Exception {
	}
	
	@Test
	void testCreateOfficerNullName()
	{
		assertThrows(IllegalArgumentException.class, () -> {
		officer = new Officer(2, "officer", 10, "DGP", new BigDecimal("10000"));
		});
	}
	
	@Test
	void testCreateOfficerNegativeSalary()
	{
		String name ="Vish";
		assertThrows(IllegalArgumentException.class, () -> {
			officer = new Officer(2, "officer", 10, "DGP", new BigDecimal("-10000"));
			});
	}
	
	@Test
	void testCalculatePay() 
	{
		String name ="Vish";
		officer = new Officer(2, "officer", 10, "DGP", new BigDecimal("10000"));
		assertEquals(BigDecimal.valueOf(10000.0000).setScale(2),officer.calcPay(LocalDate.of(2023, 8, 31)));
	}
	
	@Test
	void testCalculatePayCurrLess() 
	{
		officer = new Officer(2, "officer", 10, "DGP", new BigDecimal("10000"));
		assertEquals(BigDecimal.valueOf(0000).setScale(2),officer.calcPay(LocalDate.of(2023, 8, 3)));
	}

}
