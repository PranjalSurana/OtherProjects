package com.fidelity.payrol.src;

import java.math.BigDecimal;
import java.math.RoundingMode;
import java.time.LocalDate;

public class Consultant extends Employee {
	
	private BigDecimal contractAmount;
	private int contractLengthInMonths;
	
	public Consultant(String name, BigDecimal contractAmount, int contractLengthInMonths, LocalDate hireDate) {
		super(name, hireDate);
		this.contractAmount = contractAmount;
		this.contractLengthInMonths = contractLengthInMonths;
	}

	@Override
	public BigDecimal calculateMonthlyPay() {
		return contractAmount.divide(new BigDecimal(contractLengthInMonths), 2, RoundingMode.HALF_UP);
	}
	
	@Override
	public BigDecimal calculateMonthlyPay(BigDecimal bonus) {
		return (contractAmount.divide(new BigDecimal(contractLengthInMonths), 2, RoundingMode.HALF_UP)).add(bonus);
	}
	
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = super.hashCode();
		long temp;
		temp = salary.longValue();
		result = prime * result + (int) (temp ^ (temp >>> 32));
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (!super.equals(obj))
			return false;
		if (getClass() != obj.getClass())
			return false;
		FullTimeEmployee other = (FullTimeEmployee) obj;
		if (salary == null) {
			if (other.salary != null)
				return false;
		} else if (!salary.equals(other.salary))
			return false;
		return true;
	}

	@Override
	public String toString() {
		return "FullTimeEmployee [salary=" + salary + ", toString()=" + super.toString() + "]";
	}

}