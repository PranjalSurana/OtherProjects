package com.fidelity.hackathon.freight;

import java.math.BigDecimal;
import java.time.LocalDate;
import java.time.temporal.ChronoUnit;

public class Sailor extends CrewMember {
	
	private String jobDescription;
	private BigDecimal hourlyRate;
	private int hoursWorked;

	public Sailor(int id, String name, int payDay, String jobDescription, BigDecimal hourlyRate, int hoursWorked) {
		super(id, name, payDay);
		this.jobDescription = jobDescription;
		this.hourlyRate = hourlyRate;
		this.hoursWorked = hoursWorked;
	}

	@Override
	public BigDecimal calcPay(LocalDate currDay) {
		if(currDay <= payDay) {
			days = this.getPayDay()-currDay;
		}else {
			days = 30-this.getPayDay()+currDay;
		}
		pay = BigDecimal.valueOf(days).multiply(hourlyRate).multiply(BigDecimal.valueOf(hoursWorked));
		return pay;
	}

}